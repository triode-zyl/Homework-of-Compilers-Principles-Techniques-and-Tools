var : K, (3, 1)
n : I, (3, 5)
, : D, (3, 6)
m : I, (3, 8)
, : D, (3, 9)
i : I, (3, 11)
, : D, (3, 12)
j : I, (3, 14)
, : D, (3, 15)
digit : I, (3, 17)
( : D, (3, 22)
1 : I, (3, 23)
: : D, (3, 24)
5 : I, (3, 25)
) : D, (3, 26)
; : D, (3, 27)
procedure : K, (7, 1)
init : I, (7, 11)
; : D, (7, 15)
begin : K, (9, 1)
i : I, (11, 5)
:= : O, (11, 7)
1 : I, (11, 10)
; : D, (11, 11)
while : K, (13, 5)
i : I, (13, 11)
< : O, (13, 13)
6 : I, (13, 15)
do : K, (13, 17)
begin : K, (15, 9)
digit : I, (17, 13)
( : D, (17, 18)
i : I, (17, 19)
) : D, (17, 20)
:= : O, (17, 22)
0 : I, (17, 25)
; : D, (17, 26)
i : I, (19, 13)
:= : O, (19, 15)
i : I, (19, 18)
+ : O, (19, 20)
1 : I, (19, 22)
; : D, (19, 23)
end : K, (21, 9)
; : D, (21, 12)
end : K, (23, 1)
; : D, (23, 4)
procedure : K, (27, 1)
parse : I, (27, 11)
; : D, (27, 16)
begin : K, (29, 1)
i : I, (31, 5)
:= : O, (31, 7)
0 : I, (31, 10)
; : D, (31, 11)
while : K, (33, 5)
n : I, (33, 11)
!= : O, (33, 13)
0 : I, (33, 16)
do : K, (33, 18)
begin : K, (35, 9)
m : I, (37, 13)
:= : O, (37, 15)
n : I, (37, 18)
/ : O, (37, 20)
10 : I, (37, 22)
; : D, (37, 24)
i : I, (39, 13)
:= : O, (39, 15)
i : I, (39, 18)
+ : O, (39, 20)
1 : I, (39, 22)
; : D, (39, 23)
digit : I, (41, 13)
( : D, (41, 18)
i : I, (41, 19)
) : D, (41, 20)
:= : O, (41, 22)
n : I, (41, 25)
- : O, (41, 27)
m : I, (41, 29)
* : O, (41, 31)
10 : I, (41, 33)
; : D, (41, 35)
n : I, (43, 13)
:= : O, (43, 15)
m : I, (43, 18)
; : D, (43, 19)
end : K, (45, 9)
; : D, (45, 12)
end : K, (47, 1)
; : D, (47, 4)
procedure : K, (51, 1)
writedigit : I, (51, 11)
; : D, (51, 21)
begin : K, (53, 1)
j : I, (55, 5)
:= : O, (55, 7)
i : I, (55, 10)
; : D, (55, 11)
i : I, (57, 5)
:= : O, (57, 7)
1 : I, (57, 10)
; : D, (57, 11)
repeat : K, (59, 5)
write : K, (61, 9)
( : D, (61, 14)
digit : I, (61, 15)
( : D, (61, 20)
i : I, (61, 21)
) : D, (61, 22)
) : D, (61, 23)
; : D, (61, 24)
i : I, (63, 9)
:= : O, (63, 11)
i : I, (63, 14)
+ : O, (63, 16)
1 : I, (63, 18)
until : K, (65, 5)
digit : I, (65, 11)
( : D, (65, 16)
i : I, (65, 17)
) : D, (65, 18)
= : O, (65, 20)
0 : I, (65, 22)
; : D, (65, 23)
i : I, (67, 5)
:= : O, (67, 7)
j : I, (67, 10)
; : D, (67, 11)
end : K, (69, 1)
; : D, (69, 4)
procedure : K, (73, 1)
reverseit : I, (73, 11)
; : D, (73, 20)
begin : K, (75, 1)
j : I, (77, 5)
:= : O, (77, 7)
i : I, (77, 10)
; : D, (77, 11)
i : I, (79, 5)
:= : O, (79, 7)
1 : I, (79, 10)
; : D, (79, 11)
n : I, (81, 5)
:= : O, (81, 7)
0 : I, (81, 10)
; : D, (81, 11)
repeat : K, (83, 5)
n : I, (85, 9)
:= : O, (85, 11)
n : I, (85, 14)
* : O, (85, 16)
10 : I, (85, 18)
+ : O, (85, 21)
digit : I, (85, 23)
( : D, (85, 28)
i : I, (85, 29)
) : D, (85, 30)
; : D, (85, 31)
i : I, (87, 9)
:= : O, (87, 11)
i : I, (87, 14)
+ : O, (87, 16)
1 : I, (87, 18)
until : K, (89, 5)
i : I, (89, 11)
> : O, (89, 13)
j : I, (89, 15)
; : D, (89, 16)
i : I, (91, 5)
:= : O, (91, 7)
j : I, (91, 10)
; : D, (91, 11)
end : K, (93, 1)
; : D, (93, 4)
begin : K, (97, 1)
read : K, (99, 5)
( : D, (99, 9)
n : I, (99, 10)
) : D, (99, 11)
; : D, (99, 12)
if : K, (101, 5)
n : I, (101, 8)
<= : O, (101, 10)
99999 : I, (101, 13)
then : K, (101, 19)
begin : K, (103, 9)
call : K, (105, 13)
init : I, (105, 18)
; : D, (105, 22)
call : K, (107, 13)
parse : I, (107, 18)
; : D, (107, 23)
write : K, (109, 13)
( : D, (109, 18)
i : I, (109, 19)
) : D, (109, 20)
; : D, (109, 21)
call : K, (111, 13)
writedigit : I, (111, 18)
; : D, (111, 28)
call : K, (113, 13)
reverseit : I, (113, 18)
; : D, (113, 27)
write : K, (115, 13)
( : D, (115, 18)
n : I, (115, 19)
) : D, (115, 20)
; : D, (115, 21)
end : K, (117, 9)
; : D, (117, 12)
end : K, (119, 1)
. : D, (119, 4)
