var : K, (3, 1)
n : I, (3, 5)
, : D, (3, 6)
m : I, (3, 8)
, : D, (3, 9)
i : I, (3, 11)
, : D, (3, 12)
j : I, (3, 14)
, : D, (3, 15)
digit : I, (3, 17)
( : D, (3, 22)
1 : I, (3, 23)
: : D, (3, 24)
3 : I, (3, 25)
) : D, (3, 26)
; : D, (3, 27)
procedure : K, (7, 1)
init : I, (7, 11)
; : D, (7, 15)
begin : K, (9, 1)
i : I, (11, 5)
:= : O, (11, 7)
1 : I, (11, 10)
; : D, (11, 11)
while : K, (13, 5)
i : I, (13, 11)
< : O, (13, 13)
4 : I, (13, 15)
do : K, (13, 17)
begin : K, (15, 9)
digit : I, (17, 13)
( : D, (17, 18)
i : I, (17, 19)
) : D, (17, 20)
:= : O, (17, 22)
0 : I, (17, 25)
; : D, (17, 26)
i : I, (19, 13)
:= : O, (19, 15)
i : I, (19, 18)
+ : O, (19, 20)
1 : I, (19, 22)
; : D, (19, 23)
end : K, (21, 9)
; : D, (21, 12)
end : K, (23, 1)
; : D, (23, 4)
procedure : K, (27, 1)
parse : I, (27, 11)
; : D, (27, 16)
var : K, (29, 1)
tmp : I, (29, 5)
; : D, (29, 8)
begin : K, (31, 1)
tmp : I, (33, 3)
:= : O, (33, 7)
n : I, (33, 10)
; : D, (33, 11)
i : I, (35, 5)
:= : O, (35, 7)
0 : I, (35, 10)
; : D, (35, 11)
while : K, (37, 5)
n : I, (37, 11)
!= : O, (37, 13)
0 : I, (37, 16)
do : K, (37, 18)
begin : K, (39, 9)
m : I, (41, 13)
:= : O, (41, 15)
n : I, (41, 18)
/ : O, (41, 20)
10 : I, (41, 22)
; : D, (41, 24)
i : I, (43, 11)
:= : O, (43, 13)
i : I, (43, 16)
+ : O, (43, 18)
1 : I, (43, 20)
; : D, (43, 21)
digit : I, (45, 11)
( : D, (45, 16)
i : I, (45, 17)
) : D, (45, 18)
:= : O, (45, 20)
n : I, (45, 23)
- : O, (45, 25)
m : I, (45, 27)
* : O, (45, 29)
10 : I, (45, 31)
; : D, (45, 33)
n : I, (47, 13)
:= : O, (47, 15)
m : I, (47, 18)
; : D, (47, 19)
end : K, (49, 9)
; : D, (49, 12)
n : I, (51, 3)
:= : O, (51, 5)
tmp : I, (51, 8)
; : D, (51, 11)
end : K, (53, 1)
; : D, (53, 4)
procedure : K, (57, 1)
sumdigit : I, (57, 11)
; : D, (57, 19)
begin : K, (59, 1)
m : I, (61, 5)
:= : O, (61, 7)
digit : I, (61, 10)
( : D, (61, 15)
1 : I, (61, 16)
) : D, (61, 17)
* : O, (61, 19)
digit : I, (61, 21)
( : D, (61, 26)
1 : I, (61, 27)
) : D, (61, 28)
* : O, (61, 30)
digit : I, (61, 32)
( : D, (61, 37)
1 : I, (61, 38)
) : D, (61, 39)
+ : O, (61, 41)
digit : I, (63, 9)
( : D, (63, 14)
2 : I, (63, 15)
) : D, (63, 16)
* : O, (63, 18)
digit : I, (63, 20)
( : D, (63, 25)
2 : I, (63, 26)
) : D, (63, 27)
* : O, (63, 29)
digit : I, (63, 31)
( : D, (63, 36)
2 : I, (63, 37)
) : D, (63, 38)
+ : O, (63, 40)
digit : I, (65, 9)
( : D, (65, 14)
3 : I, (65, 15)
) : D, (65, 16)
* : O, (65, 18)
digit : I, (65, 20)
( : D, (65, 25)
3 : I, (65, 26)
) : D, (65, 27)
* : O, (65, 29)
digit : I, (65, 31)
( : D, (65, 36)
3 : I, (65, 37)
) : D, (65, 38)
; : D, (65, 39)
end : K, (67, 1)
; : D, (67, 4)
begin : K, (71, 1)
n : I, (73, 5)
:= : O, (73, 7)
1 : I, (73, 10)
; : D, (73, 11)
while : K, (75, 5)
n : I, (75, 11)
< : O, (75, 13)
1000 : I, (75, 15)
do : K, (75, 20)
begin : K, (77, 9)
call : K, (79, 13)
init : I, (79, 18)
; : D, (79, 22)
call : K, (81, 13)
parse : I, (81, 18)
; : D, (81, 23)
call : K, (83, 13)
sumdigit : I, (83, 18)
; : D, (83, 26)
if : K, (85, 13)
m : I, (85, 16)
= : O, (85, 18)
n : I, (85, 20)
then : K, (85, 22)
write : K, (87, 17)
( : D, (87, 22)
n : I, (87, 23)
) : D, (87, 24)
; : D, (87, 25)
n : I, (89, 13)
:= : O, (89, 15)
n : I, (89, 18)
+ : O, (89, 20)
1 : I, (89, 22)
; : D, (89, 23)
end : K, (91, 9)
; : D, (91, 12)
end : K, (93, 1)
. : D, (93, 4)
