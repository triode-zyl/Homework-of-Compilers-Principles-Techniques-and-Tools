var : K, (1, 1)
x : I, (1, 5)
, : D, (1, 6)
y : I, (1, 8)
; : D, (1, 9)
procedure : K, (5, 1)
function : I, (5, 11)
; : D, (5, 19)
if : K, (7, 1)
x : I, (7, 4)
< : O, (7, 6)
1 : I, (7, 8)
then : K, (7, 10)
y : I, (9, 5)
:= : O, (9, 7)
x : I, (9, 10)
else : I, (11, 1)
if : K, (13, 5)
x : I, (13, 8)
< : O, (13, 10)
10 : I, (13, 12)
then : K, (13, 15)
y : I, (15, 9)
:= : O, (15, 11)
2 : I, (15, 14)
* : O, (15, 16)
x : I, (15, 18)
- : O, (15, 20)
1 : I, (15, 22)
else : I, (17, 5)
y : I, (19, 9)
:= : O, (19, 11)
3 : I, (19, 14)
* : O, (19, 16)
x : I, (19, 18)
- : O, (19, 20)
11 : I, (19, 22)
; : D, (21, 1)
begin : K, (23, 1)
read : K, (25, 5)
( : D, (25, 9)
x : I, (25, 10)
) : D, (25, 11)
; : D, (25, 12)
call : K, (27, 5)
function : I, (27, 10)
; : D, (27, 18)
write : K, (29, 5)
( : D, (29, 10)
y : I, (29, 11)
) : D, (29, 12)
; : D, (29, 13)
end : K, (31, 1)
. : D, (31, 4)
